#!/bin/bash

# Arch Install Script by Liam
# set -e  # Exit on error

clear
echo "=== Arch Linux Automated Install Script ==="

# Verify UEFI mode
if [[ $(cat /sys/firmware/efi/fw_platform_size) -ne 64 ]]; then
    echo "Error: System is not in UEFI mode. Exiting."
    exit 1
fi

clear
# Internet Setup
echo "=== Setting up Internet ==="
ip link
iwctl station wlan0 get-networks || true
iwctl station wlan0 connect "$(iwctl station wlan0 get-networks | awk 'NR==5 {print $2}')" || true

clear
# Partitioning
echo "=== Disk Partitioning ==="
lsblk
echo "Manually partition your disk using cfdisk. Press ENTER when you are ready."
read A
cfdisk
echo "=== Partitioning Complete ==="
lsblk
echo "Above are all your disks. What is the DISK that you want to use? (e.g. vda, sda, nvme0n1 etc)" 
echo "DISK?"
read DISK
DISK="/dev/$DISK"

echo "EFI PARTITION? (e.g. vda1, sda1, nvme0n1p1 etc)"
read EFI_PART
EFI_PART="/dev/$EFI_PART"

echo "ROOT PARTITION? (e.g. vda2, sda2, nvme0n1p2 etc)"
read ROOT_PART
ROOT_PART="/dev/$ROOT_PART"

# Format Partitions
echo "=== Formatting Partitions ==="
mkfs.ext4 "$ROOT_PART"
mount "$ROOT_PART" /mnt
mkdir -p /mnt/boot/efi
echo "Do you want to keep other bootloaders (Windows etc.) (y/n)?"
read CHOOSE
if [[ "$CHOOSE" == "n" || "$CHOOSE" == "N" ]]; then
    echo "No EFI partition detected, creating one..."
    EFI_PART="${DISK}1"
    mkfs.fat -F 32 "$EFI_PART"
fi

mount "$EFI_PART" /mnt/boot/efi

PACMAN_CONF="/etc/pacman.conf"

if [[ ! -f "$PACMAN_CONF" ]]; then
    echo "Error: $PACMAN_CONF not found!"
    exit 1
fi

cp "$PACMAN_CONF" "${PACMAN_CONF}.bak"

sed -i 's/^SigLevel = Required DatabaseOptional/SigLevel = Never/' "$PACMAN_CONF"

if grep -q "SigLevel = Never" "$PACMAN_CONF"; then
    echo 
else
    echo "Failed to change SigLevel."
fi


echo "=== Installing Base System ==="
reflector --country Australia --latest 5 --protocol http --protocol https --sort rate --save /etc/pacman.d/mirrorlist
pacstrap -K /mnt base grub efibootmgr linux linux-firmware sudo nano bash networkmanager

# Generate fstab
genfstab -U /mnt >> /mnt/etc/fstab

# Chroot and Configure System
arch-chroot /mnt /bin/bash <<EOF

echo "=== Configuring System ==="
ln -sf /usr/share/zoneinfo/Australia/Sydney /etc/localtime
hwclock --systohc

sed -i 's/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf

echo "COMPUTERS NAME?"
read hostnm
echo "$hostnm" > /etc/hostname

echo "ROOT PASSWORD?"
read rootps
echo "root:$rootps" | chpasswd

echo "USERNAME?"
read usr
useradd -m -G wheel $usr
echo "USER (sudo) PASSWORD?"
read userps
echo "liam:$userps" | chpasswd
sed -i 's/^# %wheel ALL=(ALL:ALL) ALL/%wheel ALL=(ALL:ALL) ALL/' /etc/sudoers

# Configure Bootloader
mkinitcpio -P
grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB --modules="tpm" --disable-shim-lock
grub-mkconfig -o /boot/grub/grub.cfg

EOF

# Unmount and Finish
echo "=== Installation Complete ==="
umount -R /mnt
echo "Remove installation media and type 'reboot' to finish."
