# Arch install guide by liam
# Dualboot + UEFI setup

# If this command does NOT return 64, don't follow this guide
cat /sys/firmware/efi/fw_platform_size

# Internet
# Most computers use wlan0 for wifi - you can choose another network interface if needed
ip link
iwctl
station wlan0 get-networks
station wlan0 connect "Network Name"
exit

# Partitioning and disk management
# Type the DISK of your computer after /dev/, use lsblk to indentify
# In my case it would be:
cfdisk /dev/nvme0n1 

# If dualbooting:
# Shrink the largest partition if not done already 
# Choose all free space 
# Hit write

# If monobooting:
# Delete all partitions if not done already
# Make a 500mb partition first, and change type to EFI system
# Then, use the remaining space
# Hit write

# Format the filesystems and mount them
# X is the partition you want to install Arch on
mkfs.ext4 /dev/nvme0n1pX
mount /dev/nvme0n1pX /mnt 
mkdir -p /mnt/boot/efi

# ONLY if you just created the EFI partition, or only want to boot Arch, run
mkfs.fat -F 32 /dev/nvme0n1p1

# Then, regardless of dualboot/monoboot status, mount EFI partition
mount /dev/nvme0n1p1 /mnt/boot/efi

# In here, set SigLevel to Never - required if using an older archiso, optional if you are using the current archiso
nano /etc/pacman.conf 

# Install the base system - you can swap gnome out for another desktop enviroment
reflector --country Australia --latest 5 --protocol http --protocol https --sort rate --save /etc/pacman.d/mirrorlist
pacstrap -K /mnt base grub efibootmgr linux linux-firmware sudo nano neovim firefox gnome networkmanager
genfstab -U /mnt >> /mnt/etc/fstab

# Now, we transition into our system
arch-chroot /mnt 

# Set our date + time
ln -sf /usr/share/zoneinfo/your_region/your_city /etc/localtime 
hwclock --systohc

# Uncomment the locales: en_US.UTF-8 UTF-8
nano /etc/locale.gen 
locale-gen

# Write: LANG=en_US.UTF-8
nano /etc/locale.conf  

# Set your computer's name 
nano /etc/hostname

# Set our root password 
passwd 

# Make a user account
useradd -m -G wheel liam 
passwd liam 

# Uncomment the %wheel line in:
nano /etc/sudoers
# If the file is empty type these lines WITHOUT the starting #:
# root ALL=(ALL:ALL) ALL
# liam ALL=(ALL:ALL) ALL
# %wheel ALL=(ALL:ALL) ALL

# Make our install bootable 
mkinitcpio -P
grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB --modules="tpm" --disable-shim-lock
grub-mkconfig -o /boot/grub/grub.cfg

# Go back to our live iso
exit
umount -R /mnt 

# Remove our USB and type
reboot

# Post install:
Login as root and enter your root password and install:
systemctl enable --now NetworkManager 

# And if there is no graphical environment:
systemctl enable --now gdm
